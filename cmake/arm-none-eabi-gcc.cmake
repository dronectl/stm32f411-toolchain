set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_VERSION 1)
set(CMAKE_SYSTEM_PROCESSOR arm-eabi)

set(TOOLCHAIN_PREFIX arm-none-eabi)
# set toolchain path
set(CGT_ROOT "/opt/homebrew/bin")
# set stm32 header include path
set(STM32CUBEF4_BASE "/Applications/stm/f411/STM32CubeF4")
# set chip specific definitions
set(MCU STM32F411xE)

get_filename_component(LINKER_SCRIPT ${CMAKE_CURRENT_SOURCE_DIR}/STM32F411VETx_FLASH.ld ABSOLUTE)
set(
  STM32CUBEF4_INCLUDE
  ${STM32CUBEF4_BASE}/Drivers/CMSIS/Device/ST/STM32F4xx/Include
  ${STM32CUBEF4_BASE}/Drivers/CMSIS/Core/Include
)

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

message(STATUS "Discovering cgt executables.")
# find avr toolchain programs
find_program(ARM_CC NAMES ${TOOLCHAIN_PREFIX}-gcc PATHS ${CGT_ROOT} NO_DEFAULT_PATH)
find_program(ARM_ASM NAMES ${TOOLCHAIN_PREFIX}-gcc PATHS ${CGT_ROOT} NO_DEFAULT_PATH)
find_program(ARM_CXX NAMES ${TOOLCHAIN_PREFIX}-g++ PATHS ${CGT_ROOT} NO_DEFAULT_PATH)
find_program(ARM_OBJCPY NAMES ${TOOLCHAIN_PREFIX}-objcopy PATHS ${CGT_ROOT} NO_DEFAULT_PATH)
find_program(ARM_OBJDUMP NAMES ${TOOLCHAIN_PREFIX}-objdump PATHS ${CGT_ROOT} NO_DEFAULT_PATH)
find_program(ARM_SIZE NAMES ${TOOLCHAIN_PREFIX}-size PATHS ${CGT_ROOT} NO_DEFAULT_PATH)
find_program(OPENOCD NAMES openocd PATHS ${CGT_ROOT} NO_DEFAULT_PATH)

message(STATUS "Setting compilers.")
set(CMAKE_C_COMPILER ${ARM_CC})
set(CMAKE_CXX_COMPILER ${ARM_CXX})
set(CMAKE_ASM_COMPILER ${ARM_ASM})

get_filename_component(OPENOCD_CONFIG ${CMAKE_CURRENT_LIST_DIR}/stlink.cfg ABSOLUTE)
